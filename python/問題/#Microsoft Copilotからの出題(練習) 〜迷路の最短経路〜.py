# 迷路の解決: 迷路を表現した2次元リストを入力として受け取り、スタートからゴールまでの最短経路を見つけるプログラムを作成してください。
maze = [
    [0, 1, 0, 0, 0, 0, 1],
    [0, 1, 0, 1, 1, 0, 1],
    [0, 0, 0, 1, 0, 0, 0],
    [1, 1, 1, 1, 0, 1, 1],
    [0, 0, 0, 0, 0, 0, 1],
    [0, 1, 1, 1, 1, 0, 0]
]
start = (0, 0)  # スタート地点 (行, 列)
end = (5, 6)    # ゴール地点 (行, 列)
"""
深さ優先探索 (DFS): 迷路の探索には、深さ優先探索 (DFS) を使う方法があります。
幅優先探索 (BFS): 幅優先探索 (BFS) を使って、最短経路を見つけることができます。
訪問済みの管理: 既に訪問した位置を追跡するために、訪問済みリストやセットを使用します。
"""